pipeline {
    agent any 
environment {
        GITHUB_TOKEN = credentials('github-token') // Retrieve the Git token from Jenkins credentials
    }
    stages {
        stage ("Clean up") {
            steps {
                deleteDir()
            }
        }
        stage('Checkout') {
            steps {
                git url: 'https://github.com/salsabylHam/Astonvilla.git'
            }
        }
        stage ("Generate docker image") {
            steps {
                sh "docker build -t salsabilhamraoui510802/astonvilla-app:1.1.${env.BUILD_NUMBER} ."
            }
        }
        stage ("Push docker image") {
            steps {
                sh "docker push salsabilhamraoui510802/astonvilla-app:1.1.${env.BUILD_NUMBER}"
            }
        }
        stage ("Clone gitops repo") {
            steps {
                sh "git clone https://github.com/salsabylHam/argocd.git"
            }
        } 
        stage ("Change image tag") {
            steps {
                dir('argocd/astonvilla-app') {
                    script {
                        def deployment = readFile('astonvilla-deployment.yaml')
                        def updatedDeployment = deployment.replaceAll(/astonvilla-app:\s*[\w.-]+/, "astonvilla-app:1.1.${env.BUILD_NUMBER}")
                        writeFile file: 'astonvilla-deployment.yaml', text: updatedDeployment
                    }
                }
            }
        }
        stage ("Commit changes") {
            steps {
                dir('argocd/astonvilla-app') {
                    script {
                        sh 'git config user.email "jenkins@agent.com"'
                        sh 'git config user.name "jenkins-admin"'
                        sh 'git add astonvilla-deployment.yaml'
                        sh 'git commit -m "updated image tag"'
                        sh 'git push https://salsabylHam:${GITHUB_TOKEN}@github.com/salsabylHam/argocd.git master'
                    }
                }
            }
        }
    }
}
